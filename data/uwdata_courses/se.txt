[{"course": {"title": "Introduction to Methods of Software Engineering", "course_number": "101", "description": "An introduction to some of the basic methods and principles used by software engineers, including fundamentals of technical communication, measurement, analysis, and design. Some aspects of the software engineering profession, including standards, safety and intellectual property. Professional development including r\u00e9sum\u00e9 skills, interview skills, and preparation for co-op terms. [Offered: F]", "cid": "10030"}}, {"course": {"title": "Seminar", "course_number": "102", "description": "General Seminar [Offered: W]", "cid": "11339"}}, {"course": {"title": "Seminar", "course_number": "201", "description": "General Seminar [Offered: F]", "cid": "11341"}}, {"course": {"title": "Seminar", "course_number": "202", "description": "General Seminar [Offered: S]", "cid": "11330"}}, {"course": {"title": "Logic and Computation", "course_number": "212", "description": "Formal logic. Proof systems and styles. Rudimentary model theory. Formal models of computation. Logic-based specification. Correctness proofs. Applications in software engineering. [Offered: F]", "cid": "10031"}}, {"course": {"title": "Algorithms and Data Structures", "course_number": "240", "description": "Design and analysis of data structures and algorithms. Comparison of algorithms on data structures, including operations on sets (balanced search trees, hashing), sorting and priority queues, and graphs. Algorithmic paradigms including greedy algorithms, divide and conquer, dynamic programming, graph exploration, backtracking, and branch and bound. Mathematical analysis of space and time complexity. Overview of NP-completeness. [Offered: S]", "cid": "10033"}}, {"course": {"title": "Seminar", "course_number": "301", "description": "General Seminar [Offered: W]", "cid": "11335"}}, {"course": {"title": "Seminar", "course_number": "302", "description": "General Seminar [Offered: F]", "cid": "11336"}}, {"course": {"title": "Operating Systems", "course_number": "350", "description": "An introduction to the fundamentals of operating system function, and implementation. Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security. [Offered: W]", "cid": "13372"}}, {"course": {"title": "Introduction to Feedback Control", "course_number": "380", "description": "Introduction to control systems. Advantages of closed-loop feedback systems. The role of the system mathematical model. Block diagrams and signal flow graphs. The basic control system design problem, stability in control systems. Frequency response analysis techniques. Root-locus analysis. Elementary lead-lag compensation. [Offered: W]", "cid": "13373"}}, {"course": {"title": "Human-computer Interaction", "course_number": "382", "description": "The purpose of this course is to introduce students to the design, implementation, and evaluation of contemporary human-computer interfaces. Topics include user-centered design, psychological considerations, and usability. Emphasis is on practical systems, such as PC-based window/mouse/keyboard systems. Labs alternate weeks. [Offered W]", "cid": "10131"}}, {"course": {"title": "Design Project Planning", "course_number": "390", "description": "Prepares students for the software engineering design project in SE 490/491, a significant project covering all major phases of the software engineering lifecycle. Lectures describe expectations and project planning fundamentals. Students form groups, decide on a project concept, complete a project-approval process, and deliver a high-level plan for the project. [Offered: F]", "cid": "12940"}}, {"course": {"title": "Seminar", "course_number": "401", "description": "General Seminar [Offered: S]", "cid": "11337"}}, {"course": {"title": "Seminar", "course_number": "402", "description": "General Seminar. [Offered: W]", "cid": "11338"}}, {"course": {"title": "Software Requirements Specification and Analysis", "course_number": "463", "description": "Introduces students to the requirements definition phase of software development: Models, notations, and processes for software requirements identification, representation, analysis, and validation. Cost estimation from early documents and specifications. ", "cid": "10034"}}, {"course": {"title": "Software Design and Architectures", "course_number": "464", "description": "Introduces students to the design, implementation, and evolution phases of software development. Software design processes, methods, and notation. Implementation of designs. Evolution of designs and implementations. Management of design activities. ", "cid": "10035"}}, {"course": {"title": "Software Testing and Quality Assurance", "course_number": "465", "description": "Introduces students to systematic testing of software systems. Software verification, reviews, metrics, quality assurance, and prediction of software reliability and availability. Related management issues. ", "cid": "10036"}}, {"course": {"title": "Design Project 1", "course_number": "490", "description": "Students undertake a substantial project of their own devising in groups as part of the SE 390/490/491 design project sequence covering all major phases of the software engineering lifecycle. Project groups establish and maintain project control processes, deliver a detailed requirements document, deliver a detailed design, and demonstrate a first iteration prototype. [Offered: S]", "cid": "12941"}}, {"course": {"title": "Design Project 2", "course_number": "491", "description": "Final implementation, testing, and communication of the design project started in SE 390. Preparation of a detailed test document. Technical presentations by groups. Final release of the project. Project retrospective. [Offered: W]", "cid": "12942"}}, {"course": {"title": "Advanced Topics in Software Engineering", "course_number": "498", "description": "See the Course Offerings List for topics available. [Offered: As available]", "cid": "12292"}}, {"course": {"title": "Project", "course_number": "499", "description": "A software engineering project requiring the student to demonstrate initiative an assume responsibility. The student normally proposes his or her own project, which must involve substantial engineering science or engineering design. The student must find a faculty supervisor. A project report is required at the end of the term. Program consent required. [Offered: F, W, S]", "cid": "12293"}}]