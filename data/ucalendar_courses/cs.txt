[{"notes": ["Prereq: Not open to Mathematics students.", "Antireq: All second, third or fourth year computer science courses or equivalents", "Only offered Online"], "description": "Using personal computers as effective problem solving tools for the present and the future. Effective use of spreadsheets to process, manipulate, and visualize numeric and textual information. Introduction to the Internet, World Wide Web, HTML, and XML. Algorithms underlying the functional components of web search engines and their influence on data access. Using wikis to publish, reshape, and organize data collaboratively. [Offered: F,W,S]", "intro": "CS 100 LEC 0.50", "id": "Course ID: 004360", "name": "Introduction to Computing through Applications"}, {"notes": ["[Note: See Note 2 above. Also offered at St. Jerome's University in the Fall term. Offered: F,W,S]", "Antireq: CS 121, 122, 123, 125, 131, 132, 133, 135, 137, 138, 145, CHE 121, CIVE 121, ECE 150, GENE 121, PHYS 139, SYDE 121", "Also offered at St. Jerome's University"], "description": "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming. Function definition and application. Tracing via substitution. Design, testing, and documentation. Recursive data definitions. Lists and trees. Functional and data abstraction.\r\n", "intro": "CS 115 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 012765", "name": "Introduction to Computer Science 1"}, {"notes": ["Prereq: CS 115 or 135.", "Antireq: CS 134, 136, 137, 138, 145 taken fall 2010 or earlier, 146"], "description": "This course builds on the techniques and patterns learned in CS 115 while making the transition to use of an imperative language. Generative and structural recursion. Mutation (assignment) and its role in an imperative language. Primitive types and basic I/O. Sequencing, selection, looping. Function definition and use. File and console I/O. Issues in computer science. [Also offered at St. Jerome's University in the Winter term. Offered: F,W,S]", "intro": "CS 116 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 012766", "name": "Introduction to Computer Science 2"}, {"notes": ["[Note: See Note 2 above. Offered: F,W]", "Antireq: CS 115, 121, 122, 123, 125, 131, 132, 133, 134, 137, 138, 145, CHE 121, CIVE 121, ECE 150, GENE 121, PHYS 139, SYDE 121"], "description": "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming. Syntax and semantics of a functional programming language. Tracing via substitution. Design, testing, and documentation. Linear and nonlinear data structures. Recursive data definitions. Abstraction and encapsulation. Generative and structural recursion. Historical context. ", "intro": "CS 135 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 012040", "name": "Designing Functional Programs"}, {"notes": ["[Note: See Note 2 above. Offered: F,W,S]", "Prereq: CS 116 or at least 60% in CS 135 or CS 145 taken fall 2011 or later.", "Antireq: CS 134, 137, 138, CS 145 taken fall 2010 or earlier"], "description": "This course builds on the techniques and patterns learned in CS 135 while making the transition to use of an imperative language. It introduces the design and analysis of algorithms, the management of information, and the programming mechanisms and methodologies required in implementations. Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations. ", "intro": "CS 136 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 012041", "name": "Elementary Algorithm Design and Data Abstraction"}, {"notes": ["Prereq: Software Engineering students only"], "description": "Review of fundamental programming concepts and their application. Procedures and parameter passing. Arrays and structures. Recursion. Sorting. Pointers and simple dynamic structures. Space and time analysis of designs. Design methodologies. [Offered: F]", "intro": "CS 137 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 012886", "name": "Programming Principles"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. [Offered: W]", "Prereq: CS 137"], "description": "Software abstractions via elementary data structures and their implementation; encapsulation and modularity; class and interface definitions; object instantiation; recursion; elementary abstract data types, including sequences, stacks, queues, and trees; implementation using linked structures and arrays; vectors and strings; memory models; automatic vs. dynamic memory management. ", "intro": "CS 138 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 012887", "name": "Introduction to Data Abstraction and Implementation"}, {"notes": ["[Note: See Note 2 above. This course may be substituted for CS 135 in any degree plan or for prerequisite purposes. Offered: F]", "Department Consent Required", "Antireq: CS 115, 135, 137, 138"], "description": "CS 145 is an advanced-level version of CS 135. ", "intro": "CS 145 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 012767", "name": "Designing Functional Programs (Advanced Level)"}, {"notes": ["[Note: See Note 2 above. This course may be substituted for CS 136 in any degree plan or for prerequisite purposes. Students who receive a good grade in CS 135 may contact the instructor of CS 146 to seek admission without the formal prerequisites. Offered: W]", "Prereq: CS 145 with a grade of at least 75%.", "Antireq: CS 116, 136, 137, 138, 145 taken fall 2010 or earlier"], "description": "CS 146 is an advanced-level version of CS 136. ", "intro": "CS 146 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 013657", "name": "Elementary Algorithm Design and Data Abstraction (Advanced Level)"}, {"notes": ["[Note: Students with computing experience equivalent to CS 100 may also enrol in this course. Offered: F,S]", "Prereq: CS 100 or Grade 11 or 12 or OAC Computer Science or 4M Computer and Information Science.", "Antireq: All second, third or fourth year computer science courses"], "description": "Important concepts underlying major personal computer application categories; methodologies for learning and evaluating software; operating system and hardware design from the user's point of view, with implications for maintaining a personal computer. Students are encouraged to use their own personal computer for assignments. A substantial project is required involving the integrated use of several applications. ", "intro": "CS 200 LAB,LEC,TST 0.50", "id": "Course ID: 004372", "name": "Concepts for Advanced Computer Usage"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]", "Prereq: One of CS 116, 136, 138, 146; Not open to Computer Science students.", "Antireq: CS 241, 251"], "description": "Basic computer architecture, organization, system services, and software. Typology of processors, memory, I/O devices and their performance. ", "intro": "CS 230 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 004374", "name": "Introduction to Computers and Computer Systems"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,S]", "Prereq: One of CS 116, 126/124, 134, 136, 138, 145 taken fall 2010 or earlier, CS 146; Not open to Computer Science students.", "Antireq: CS 240"], "description": "Top-down design of data structures. Using representation-independent data types. Introduction to commonly used data types, including lists, sets, mappings, and trees. Selection of data representation. ", "intro": "CS 234 LAB,LEC,TST 0.50", "id": "Course ID: 004375", "name": "Data Types and Structures"}, {"notes": ["[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "Prereq: (CS 245 or SE 212), (CS 246 or 247), (one of STAT 206, 230, 240); Computer Science students only.", "Antireq: CS 234, ECE 250, SE 240"], "description": "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms. Specific topics include priority queues, sorting, dictionaries, data structures for text processing. ", "intro": "CS 240 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 004377", "name": "Data Structures and Data Management"}, {"notes": ["[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. CS 251 is a recommended corequisite. Offered: F,W,S]", "Prereq: CS 246 or (CS 138 and enrolled in Software Engineering); Computer Science students only"], "description": "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages. ", "intro": "CS 241 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 004378", "name": "Foundations of Sequential Programs"}, {"notes": ["[Note: Enrolment is restricted; see Note 1 above. Offered: F,W,S]", "Prereq: (CS 136, 145 taken in fall 2010 or earlier or CS 146), MATH 135; Honours Mathematics students only.", "Antireq: PMATH 330, SE 112/212"], "description": "Propositional and predicate logic. Soundness and completeness and theirimplications. Unprovability of formulae in certain systems. Undecidability of problems in computation, including the halting problem. Reasoning about programs. Correctness proofs for both recursive and iterative program constructions. ", "intro": "CS 245 LEC,TST,TUT 0.50", "id": "Course ID: 011405", "name": "Logic and Computation"}, {"notes": ["[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "Prereq: CS 145 taken fall 2010 or earlier or CS 146 or a grade of 60% or higher in CS 136 or 138; Honours Mathematics or Software Engineering students only.", "Antireq: GENE 342, SYDE 322/221"], "description": "Introduction to object-oriented programming and to tools and techniques for software development. Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites. ", "intro": "CS 246 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 004380", "name": "Object-Oriented Software Development"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: S]", "Prereq: CS 241; Software Engineering students only.", "Antireq: CS 246, SYDE 322"], "description": "Systematic methods for designing, coding, testing, and documenting medium-sized programs. Major topics include abstraction, modularity, software modeling, object-oriented programming and design, generic programming, testing and debugging. ", "intro": "CS 247 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 013805", "name": "Software Engineering Principles"}, {"notes": ["[Note: Students enrolled in CS/DHW should enrol in ECE 222. Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "Prereq: CS 134 or 136 or 145 taken fall 2010 or earlier, CS 146; Computer Science students only.", "Antireq: ECE 222, PHYS 353/392, SE 141"], "description": "Overview of computer organization and performance. Basics of digital logic design. Combinational and sequential elements. Data representation and manipulation. Basics of processor design. Pipelining. Memory hierarchies. Multiprocessors. ", "intro": "CS 251 LAB,LEC,TST 0.50", "id": "Course ID: 004382", "name": "Computer Organization and Design"}, {"notes": ["Prereq: One of CS 116, 126/124, 134, 136, 138, 145 taken fall 2010 or earlier, CS 146; Level at least 2B; Not open to Computer Science students.", "Antireq: AFM 241, CS 480/490, MSCI 441"], "description": "An introduction to information systems and their strategic role in business. Topics include types of information systems, organizational requirements, systems development strategies, decision support systems, data and information management, and information systems management, control and implementation. [Offered: F,W,S]", "intro": "CS 330 LEC,TST 0.50", "id": "Course ID: 004385", "name": "Management Information Systems"}, {"notes": ["Prereq: (one of CS 116, 136, 138, 145 taken fall 2010 or earlier, CS 146); MATH 136 or 146, MATH 237 or 247, STAT 231 or 241; Not open to Computer Science students.", "Antireq: AMATH 242/CM 271/CS 371, CS 370, ECE 204"], "description": "An introduction to numerical methods for business and finance. Floating-point arithmetic, interpolation. Methods for portfolio optimization and contingent-claims valuation. Solution of nonlinear equations. Monte Carlo methods, lattice methods, simulation of hedging strategies.", "intro": "CS 335 LEC 0.50", "id": "Course ID: 013658", "name": "Computational Methods in Business and Finance"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "Prereq: One of CS 230, 234, 246, 330; Not open to Computer Science students.", "Antireq: CS 348, 448, ECE 456"], "description": "A user-oriented approach to the management of large collections of data. Methods used for the storage, selection and presentation of data. Common database management systems. ", "intro": "CS 338 LAB,LEC 0.50", "id": "Course ID: 004390", "name": "Computer Applications in Business: Databases"}, {"notes": ["[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "Prereq: CS 240 and (CS 245 or SE 112/212) and MATH 239 or 249; Computer Science students only.", "Antireq: SE 240, SYDE 423"], "description": "The study of efficient algorithms and effective algorithm design techniques. Program design with emphasis on pragmatic and mathematical aspects of program efficiency. Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications. ", "intro": "CS 341 LAB,LEC,TST 0.50", "id": "Course ID: 004392", "name": "Algorithms"}, {"notes": ["[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W]", "Prereq: CS 350 or SE 350; Computer Science students only"], "description": "An introduction to concurrent and parallel programming, with an emphasis on language constructs. Major topics include: exceptions, coroutines, atomic operations, critical sections, mutual exclusion, semaphores, high-level concurrency, deadlock, interprocess communication, process structuring, shared memory and distributed architectures. Students will learn how to structure, implement and debug concurrent programs. ", "intro": "CS 343 LAB,LEC,TST 0.50", "id": "Course ID: 011417", "name": "Concurrent and Parallel Programming"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "Prereq: CS 240 or SE 240; Computer Science students only.", "Antireq: CS 338, 448 (taken in S'06 or earlier), ECE 456"], "description": "The main objective of this course is to introduce students to fundamentals of database technology by studying databases from three viewpoints: those of the database user, the database designer, and the database administrator. It teaches the use of a database management system (DBMS) by treating it as a black box, focusing only on its functionality and its interfaces. Topics include: introduction to database systems, relational database systems, database design methodology, SQL and interfaces, database application development, concept of transactions, ODBC, JDBC, database tuning, database Administration, and current topics (distributed databases, data warehouses, data mining). ", "intro": "CS 348 LAB,LEC,TST 0.50", "id": "Course ID: 004417", "name": "Introduction to Database Management"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W,S]", "Prereq: CS 241 and one of MATH 115, 136, 146; Computer Science students only"], "description": "An introduction to contemporary user interfaces, including the basics of human-computer interaction, the user interface design/evaluation process, the event abstraction, user interface components, specification of user interfaces, and the architectures within which user interfaces are developed. Implementation and evaluation of a typical user interface is considered. ", "intro": "CS 349 LAB,LEC,TST 0.50", "id": "Course ID: 011727", "name": "User Interfaces"}, {"notes": ["[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "Prereq: CS 240, 241, 246, (CS 251 or ECE 222); Computer Science students only.", "Antireq: ECE 354, GENE/MTE 241, SE 350"], "description": "An introduction to the fundamentals of operating system function, design, and implementation. Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security. ", "intro": "CS 350 LAB,LEC,TST 0.50", "id": "Course ID: 011416", "name": "Operating Systems"}, {"notes": ["[Note: Enrolment is restricted; see Note 1 above. Offered: F,W,S]", "Prereq: (CS 240 or SE 240), CS 241, (CS 245 or SE 112/212), MATH 239 or 249; Computer Science students only.", "Antireq: CS 365"], "description": "Models of computers including finite automata and Turing machines. Basics of formal languages with applications to the syntax of programming languages. Alternate characterizations of language classes. Proving unrecognizability. Unsolvable problems and their relevance to the semantics of programming. ", "intro": "CS 360 LEC 0.50", "id": "Course ID: 004398", "name": "Introduction to the Theory of Computing"}, {"notes": ["[Note: CS 365 may be substituted for CS 360 in any degree plan or for prerequisite purposes; enrolment is restricted; see Note 1 above. Offered: W]", "Prereq: CS 240, 241, 245, MATH 239 or 249; Computer Science students only.", "Antireq: CS 360"], "description": "Finite automata and regular expressions. Pushdown automata and context-free grammars. Turing machines and undecidability. Time and space complexity. Diagonalization and hierarchies. CS 365 covers the material in CS 360 at an accelerated pace plus additional topics in computational complexity. ", "intro": "CS 365 LAB,LEC 0.50", "id": "Course ID: 011347", "name": "Models of Computation"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "Prereq: (One of MATH 118, 119, 128, 138, 148), (One of MATH 114, 115, 106/125, 136, 146), (One of CS 234, 241, 246); Not open to General Mathematics students.", "Antireq: AMATH 242/341/CM 271/CS 371, CS 335, 337, ECE 204, 304"], "description": "Principles and practices of basic numerical computation as a key aspect of scientific computation. Visualization of results. Approximation by splines, fast Fourier transforms, solution of linear and nonlinear equations, differential equations, floating point number systems, error, stability. Presented in the context of specific applications to image processing, analysis of data, scientific modeling. ", "intro": "CS 370 LAB,LEC,TST 0.50", "id": "Course ID: 004400", "name": "Numerical Computation"}, {"notes": ["[Note: This course may be substituted for CS 370 in any degree plan or for prerequisite purposes; lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W,S]", "Prereq: (One of CS 116, 134, 136, 138, 145 taken fall 2010 or earlier, CS 146), MATH 235 or 245, 237 or 247; Not open to General Mathematics students.", "Antireq: CS 335, 337, 370, ECE 204", "(Cross-listed with AMATH 242)"], "description": "A rigorous introduction to the field of computational mathematics. The focus is on the interplay between continuous models and their solution via discrete processes. Topics include: pitfalls in computation, solution of linear systems, interpolation, discrete Fourier transforms and numerical integration. Applications are used as motivation. ", "intro": "CS 371 LAB,LEC 0.50", "id": "Course ID: 011363", "name": "Introduction to Computational Mathematics"}, {"notes": ["Prereq: CS 240 and (CS 246 or 247); Computer Science students only"], "description": "See the Course Offerings List for topics available.", "intro": "CS 398 LEC 0.50", "id": "Course ID: 011409", "name": "Topics in Computer Science"}, {"notes": ["Prereq: CS 240 and (CS 246 or 247); Computer Science students only"], "description": "", "intro": "CS 399 RDG 0.50", "id": "Course ID: 011410", "name": "Readings in Computer Science"}, {"notes": ["Prereq: CS 330; Level at least 3A; Not open to Computer Science students.", "Antireq: CS 446/ECE 452, SE 464"], "description": "An investigation into the role and function of software engineering practice in the construction of computer based systems. Topics include: requirements and specification; documentation techniques; analysis and design; implementation; testing and maintenance; management issues. [Offered: F,W]", "intro": "CS 430 LEC 0.50", "id": "Course ID: 004404", "name": "Applications Software Engineering"}, {"notes": ["Prereq: CS 330; Level at least 3A; Not open to Computer Science students.", "Antireq: AFM 341/ACC 442, CS 445/ECE 451, MSCI 444, SE 463"], "description": "Survey of organization and management theory. Systems theory and the systems approach. Systems design. Database concepts. Implementation and evaluation of computer based information systems. [Offered: F,W,S]", "intro": "CS 432 LEC 0.50", "id": "Course ID: 004405", "name": "Business Systems Analysis"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]", "Prereq: One of CS 230, 241, 246, 251; Not open to Computer Science students.", "Antireq: CS 454, 456, ECE 428, 454"], "description": "An introduction to networks, protocols, and distributed systems. Layered models, resource management, naming, addressing and routing, reliable communication, security, and higher-level services. ", "intro": "CS 436 LAB,LEC 0.50", "id": "Course ID: 004407", "name": "Networks and Distributed Computer Systems"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]", "Prereq: (CS 240 or SE 240) and (CS 245 or SE 112/212); Computer Science students only"], "description": "An exposure to important concepts and issues in contemporary programming languages. Data types, abstraction, and polymorphism. Program structure. Lambda calculus and functional programming, logic programming, object-oriented programming. Semantics of programming languages. Critical comparison of language features and programming methodologies using examples drawn from a variety of programming languages including Lisp, Prolog, ML, Ada, Smalltalk, Icon, APL, and Lucid. Programming assignments involve the use of some of these languages. ", "intro": "CS 442 LAB,LEC 0.50", "id": "Course ID: 004410", "name": "Principles of Programming Languages"}, {"notes": ["[Note: This course involves project work. Offered: W]", "Prereq: CS 350 or SE 350; Computer Science students only"], "description": "Phases of compilation. Lexical analysis and a review of parsing. Compiler-compilers and translator writing systems. LEX and YACC. Scope rules, block structure, and symbol tables. Runtime stack management. Parameter passage mechanisms. Stack storage organization and templates. Heap storage management. Intermediate code. Code generation. Macros. ", "intro": "CS 444 LAB,LEC 0.50", "id": "Course ID: 004412", "name": "Compiler Construction"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W]", "Prereq: CS 350; Computer Science students only.", "Antireq: SE 463", "(Cross-listed with ECE 451)"], "description": "Introduces students to the requirements definition phase of software development. Models, notations, and processes for software requirements identification, representation, analysis, and validation. Cost estimation from early documents and specifications. ", "intro": "CS 445 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 004413", "name": "Software Requirements Specification and Analysis"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,S]", "Prereq: CS 350; Computer Science students only.", "Antireq: CS 430, SE 464", "(Cross-listed with ECE 452)"], "description": "Introduces students to the design, implementation, and evolution phases of software development. Software design processes, methods, and notation. Implementation of designs. Evolution of designs and implementations. Management of design activities. ", "intro": "CS 446 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 004414", "name": "Software Design and Architectures"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]", "Prereq: CS 350; Computer Science students only.", "Antireq: SE 465", "(Cross-listed with ECE 453)"], "description": "Introduces students to systematic testing of software systems. Software verification, reviews, metrics, quality assurance, and prediction of software reliability and availability. Related management issues. ", "intro": "CS 447 LAB,LEC,TST,TUT 0.50", "id": "Course ID: 004416", "name": "Software Testing, Quality Assurance and Maintenance"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]", "Prereq: CS 348 and (CS 350 or SE 350); Computer Science students only"], "description": "The objective of this course is to introduce students to fundamentals of building a relational database management system. The course focuses on the database engine core technology by studying topics such as storage management (data layout, disk-based data structures), indexing, query processing algorithms, query optimization, transactional concurrency control, logging and recovery. ", "intro": "CS 448 LAB,LEC 0.50", "id": "Course ID: 012300", "name": "Database Systems Implementation"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]", "Prereq: CS 240, 241; Level at least 3B; Computer Science students only.", "Antireq: SYDE 348"], "description": "An introduction to the fundamental theories, methods, and research in the design and evaluation of novel computational artifacts designed to meet real-world human needs. ", "intro": "CS 449 LAB,LEC 0.50", "id": "Course ID: 013910", "name": "Human-Computer Interaction"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]", "Prereq: (CS 245 or SE 112/212) and (CS 350 or ECE 354 or MTE 241 or SE 350); Computer Science students only.", "Antireq: ECE 429"], "description": "The course is intended to provide the student with an appreciation of modern computer design and its relation to system architecture, compiler technology and operating system functionality. The course places an emphasis on design based on the measurement of performance and its dependency on parallelism, efficiency, latency and resource utilization. ", "intro": "CS 450 LAB,LEC 0.50", "id": "Course ID: 004418", "name": "Computer Architecture"}, {"notes": ["[Note: This course involves project work. Offered: F,S]", "Prereq: CS 350 or SE 350; Computer Science students only"], "description": "Intended to give students experience with tools and techniques of real-time programming, this course includes not only issues of microcomputer architecture and a real-time programming language and operating system, but also hands-on experience programming a microcomputer for applications such as process control, data acquisition and communication. ", "intro": "CS 452 LAB,LEC 0.50", "id": "Course ID: 004419", "name": "Real-time Programming"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "Prereq: CS 350 or SE 350; Computer Science students only"], "description": "An introduction to distributed systems, emphasizing the multiple levels of software in such systems. Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization. ", "intro": "CS 454 LAB,LEC 0.50", "id": "Course ID: 004420", "name": "Distributed Systems"}, {"notes": ["Prereq: CS 350 or ECE 354; Computer Science students only.", "Antireq: CS 436, ECE 358, 428"], "description": "An introduction to network architectures and protocols, placing emphasis on protocols used in the Internet. Specific topics include application layer protocols, network programming, transport protocols, routing, multicast, data link layer issues, multimedia networking, network security, and network management. [Offered: F,W,S]", "intro": "CS 456 LAB,LEC,TST 0.50", "id": "Course ID: 010167", "name": "Computer Networks"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]", "Prereq: (CS 246 or 247) and (one of STAT 206, 231, 241); Computer Science students only"], "description": "Basic techniques of system performance evaluation. Specific topics include: performance modeling, discrete event simulation, verification and validation of simulation models, analysis of simulation output, analysis of single server queue and queueing networks, modeling of computer systems, networks, and other queueing or non-queueing systems. ", "intro": "CS 457 LAB,LEC 0.50", "id": "Course ID: 004422", "name": "System Performance Evaluation"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W]", "Prereq: CS 350 or SE 350. Computer Science students only.", "Antireq: ECE 458"], "description": "Security and privacy issues in various aspects of computing. Specific topics include: comparing security and privacy, program security, writing secure programs, controls against program threats, operating system security, formal security models, network security, Internet application security and privacy, privacy-enhancing technologies, database security and privacy, inference, data mining, security policies, physical security, economics of security, and legal and ethical issues. ", "intro": "CS 458 LAB,LEC,TST 0.50", "id": "Course ID: 012980", "name": "Computer Security and Privacy"}, {"notes": ["Prereq: CS 360 or 365; Computer Science students only"], "description": "Languages and their representations. Grammars --Chomsky hierarchy. Regular sets and sequential machines. Context-free grammars -- normal forms, basic properties. Pushdown automata and transducers. Operations on languages. Undecidable problems in language theory. Applications to the design of programming languages and compiler construction.", "intro": "CS 462 LEC 0.50", "id": "Course ID: 004424", "name": "Formal Languages and Parsing"}, {"notes": ["Prereq: CM 339/CS 341; Computer Science students only"], "description": "Algorithmic approaches and methods of assessment that reflect a broad spectrum of criteria, including randomized algorithms, amortized analysis, lower bounds, approximation algorithms, and on-line algorithms. Particular examples will be chosen from different areas of active research and application. [Offered: F,S]", "intro": "CS 466 LEC 0.50", "id": "Course ID: 004426", "name": "Algorithm Design and Analysis"}, {"notes": ["Prereq: One of MATH 114, 115, 235, 245; Level at least 4A; Not open to General Mathematics students", "(Cross-listed with CO 481, PHYS 467)"], "description": "Basics of computational complexity; basics of quantum information; quantum phenomena; quantum circuits and universality; relationship between quantum and classical complexity classes; simple quantum algorithms; quantum Fourier transform; Shor factoring algorithm; Grover search algorithm; physical realization of quantum computation; error-correction and fault-tolerance; quantum key distribution. [Offered: W]", "intro": "CS 467 LEC 0.50", "id": "Course ID: 011497", "name": "Introduction to Quantum Information Processing"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]", "Prereq: AMATH 242/341/CM 271/ CS 371 or CS 370; Not open to General Mathematics students"], "description": "An introduction to computational problems in medical imaging. Sources of medical images (MRI, CT, ultrasound, PET) as well as reconstruction methods for MRI and CT. Image manipulation and enhancement such as denoising and deblurring. Patient motion correction and optimal image alignment. Tissue classification and organ delineation using image topology. ", "intro": "CS 473 LAB,LEC 0.50", "id": "Course ID: 011446", "name": "Medical Image Processing"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F]", "Prereq: AMATH 242/341/CM 271/CS 371 or CS 370; Not open to General Mathematics students.", "Antireq: CM/CS 372, 472"], "description": "Basic concepts and implementation of numerical linear algebra techniques and their use in solving application problems. Special methods for solving linear systems having special features. Direct methods: symmetric, positive definite, band, general sparse structures, ordering methods.\r\nIterative methods: Jacobi, Gauss-Seidel, SOR, conjugate gradient. Computing and using orthogonal factorizations of matrices. QR and SVD methods for solving least squares problems. Eigenvalue and singular value decompositions. Computation and uses of these decompositions in practice. ", "intro": "CS 475 LAB,LEC 0.50", "id": "Course ID: 011444", "name": "Computational Linear Algebra"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Students who receive a good grade in CS 335 may contact the instructor of CS 476 to seek admission without the formal prerequisites. Offered: W]", "Prereq: (AMATH 242/341/CM 271/CS 371 or CS 370) and STAT 231/241; Not open to General Mathematics students"], "description": "The interaction of financial models, numerical methods, and computing environments. Basic computational aspects of option pricing and hedging. Numerical methods for stochastic differential equations, strong and weak convergence. Generating correlated random numbers. Time-stepping methods. Finite difference methods for the Black-Scholes equation. Discretization, stability, convergence. Methods for portfolio optimization, effect of data errors on portfolio weights. ", "intro": "CS 476 LAB,LEC 0.50", "id": "Course ID: 003352", "name": "Numeric Computation for Financial Modeling"}, {"notes": ["Prereq: BIOL 365, CM 339/CS 341, STAT 241 or at least 60% in STAT 231"], "description": "Computer science principles and algorithms in biological sequence analysis. Topics include algorithms for sequence comparison, for large-scale database search in biological databases, for sequence assembly, for evolutionary tree reconstruction, for identifying important features in DNA and RNA sequences, and underlying computational techniques for understanding strings and trees and for making probabilistic inferences. [Offered: S]", "intro": "CS 482 LEC,TUT 0.50", "id": "Course ID: 004434", "name": "Computational Techniques in Biological Sequence Analysis"}, {"notes": ["Prereq: BIOL 365, CM 339/CS 341, STAT 231 or 241"], "description": "Algorithms and techniques used in the identification and functional characterization of cellular proteins. Topics include: protein databases, gene expression analysis, protein structure prediction, protein function prediction, active site detection and ligand docking, protein-protein interaction, HTCS (High Throughput Conformational Search), and QSAR (Quantitative Structure-Activity Relationships). [Offered: W]", "intro": "CS 483 LEC 0.50", "id": "Course ID: 010043", "name": "Computational Techniques in Structural Bioinformatics"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]", "Prereq: (AMATH 242/341/CM 271/CS 371 or CS 370) and STAT 230 or 240; Computer Science students only"], "description": "Introduction to image and vision understanding by computer. Camera-system geometry, image formation and lighting, and image acquisition. Basic visual processes for recognition of edges, regions, lines, and surfaces. Processing of stereo images, and motion in image sequences. Object recognition. Applications of computer-vision systems. ", "intro": "CS 484 LAB,LEC 0.50", "id": "Course ID: 013912", "name": "Computational Vision"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]", "Prereq: CM 339/CS 341 and (STAT 230 or 240); Computer Science students only"], "description": "Extracting meaningful patterns from random samples of large data sets. Statistical analysis of the resulting problems. Common algorithmic paradigms for such tasks. Central concepts: VC-dimension, margins of a classifier, sparsity and description length. Performance guarantees: generalization bounds, data dependent error bounds and computational complexity of learning algorithms. Common paradigms: neural networks, kernel methods and support-vector machines. Applications to data mining. ", "intro": "CS 485 LAB,LEC 0.50", "id": "Course ID: 013911", "name": "Machine Learning: Statistical and Computational Foundations"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "Prereq: CM 339/CS 341 or SE 240; Computer Science students only.", "Coreq: STAT 206 or 231 or 241.", "Antireq: ECE 457"], "description": "Goals and methods of artificial intelligence. Methods of general problem solving. Knowledge representation and reasoning. Planning. Reasoning about uncertainty. Machine learning. Multi-agent systems. Natural language processing. ", "intro": "CS 486 LAB,LEC,TST 0.50", "id": "Course ID: 004435", "name": "Introduction to Artificial Intelligence"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]", "Prereq: CS 234 or 240 or SE 240; Honours Mathematics or Software Engineering students only"], "description": "An introduction to the use of computers for symbolic mathematical computation, involving traditional mathematical computations such as solving linear equations (exactly), analytic differentiation and integration of functions, and analytic solution of differential equations. ", "intro": "CS 487 LAB,LEC 0.50", "id": "Course ID: 004436", "name": "Introduction to Symbolic Computation"}, {"notes": ["[Note: This course involves project work. Offered: F,W,S]", "Prereq: (CM 339/CS 341 or SE 240) and (CS 350 or SE 350) and (CS 370 or 371); Computer Science students only"], "description": "Software and hardware for interactive computer graphics. Implementation of device drivers, 3-D transformations, clipping, perspective, and input routines. Data structures, hidden surface removal, colour shading techniques, and some additional topics will be covered. ", "intro": "CS 488 LAB,LEC 0.50", "id": "Course ID: 004437", "name": "Introduction to Computer Graphics"}, {"notes": ["Prereq: Level at least 3B; Computer Science students only"], "description": "See the Course Offerings List for topics available.", "intro": "CS 489 LEC 0.50", "id": "Course ID: 010044", "name": "Advanced Topics in Computer Science"}, {"notes": ["Prereq: CS 350 or SE 350; Computer Science students only"], "description": "The integration of business and technical considerations in the design, implementation and management of information systems. Topics include: IS planning and development; business, management, executive, and strategic information systems, including case studies of selected large- scale systems; decision support systems; end-user training and development; systems security, disaster planning and recovery. Practical examples of information systems in industry. [Offered: W]", "intro": "CS 490 LEC 0.50", "id": "Course ID: 004433", "name": "Information Systems Management"}, {"notes": ["Prereq: CS 240 or SE 240; Computer Science students only"], "description": "This course is designed to consider the problems encountered by individuals, organizations and society as computer technology is adopted, with a view towards assessing possible courses of action. [Offered: W]", "intro": "CS 492 LEC 0.50", "id": "Course ID: 004438", "name": "The Social Implications of Computing"}, {"notes": ["Prereq: Level at least 3B; Computer Science students only"], "description": "See the Course Offerings list for topics available.", "intro": "CS 497 LEC 0.50", "id": "Course ID: 012280", "name": "Multidisciplinary Studies in Computer Science"}, {"notes": ["Department Consent Required", "Prereq: Level at least 3B; Computer Science students only"], "description": "", "intro": "CS 499R RDG 0.50", "id": "Course ID: 004444", "name": "Readings in Computer Science"}, {"notes": ["[Note: Offered for CR/NCR only. CS 499R is recommended. A detailed thesis proposal and names of a supervisor and reader are required.]", "Department Consent Required", "Prereq: Computer Science students only"], "description": "The student will undertake new analysis, synthesis, measurement, or experimentation to produce a document that demonstrates a depth of understanding of a topic that goes beyond what is obtained in a standard undergraduate education. ", "intro": "CS 499T PRJ 0.50", "id": "Course ID: 012560", "name": "Honours Thesis"}]