[{"notes": ["Prereq: Software Engineering students only"], "description": "An introduction to some of the basic methods and principles used by software engineers, including fundamentals of technical communication, measurement, analysis, and design. Some aspects of the software engineering profession, including standards, safety and intellectual property. Professional development including r\u00e9sum\u00e9 skills, interview skills, and preparation for co-op terms. [Offered: F]", "intro": "SE 101 LAB,LEC,SEM 0.25", "id": "Course ID: 010030", "name": "Introduction to Methods of Software Engineering"}, {"notes": ["Prereq: Software Engineering students only"], "description": "General Seminar [Offered: W]", "intro": "SE 102 SEM 0.00", "id": "Course ID: 011339", "name": "Seminar"}, {"notes": ["Prereq: Software Engineering students only"], "description": "General Seminar [Offered: F]", "intro": "SE 201 SEM 0.00", "id": "Course ID: 011341", "name": "Seminar"}, {"notes": ["Prereq: Software Engineering students only"], "description": "General Seminar [Offered: S]", "intro": "SE 202 SEM 0.00", "id": "Course ID: 011330", "name": "Seminar"}, {"notes": ["Prereq: MATH 135; Software Engineering students only"], "description": "Formal logic. Proof systems and styles. Rudimentary model theory. Formal models of computation. Logic-based specification. Correctness proofs. Applications in software engineering. [Offered: F]", "intro": "SE 212 LEC,TUT 0.50", "id": "Course ID: 010031", "name": "Logic and Computation"}, {"notes": ["Prereq: Software Engineering students only"], "description": "General Seminar [Offered: W]", "intro": "SE 301 SEM 0.00", "id": "Course ID: 011335", "name": "Seminar"}, {"notes": ["Prereq: Software Engineering students only"], "description": "General Seminar [Offered: F]", "intro": "SE 302 SEM 0.00", "id": "Course ID: 011336", "name": "Seminar"}, {"notes": ["Prereq: CS 240, (CS 246 or 247), ECE 222; Software Engineering students only.", "Antireq: CS 350, ECE 254, 354, MTE 241"], "description": "An introduction to the fundamentals of operating system function, and implementation. Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security. [Offered: W]", "intro": "SE 350 LAB,LEC,TUT 0.50", "id": "Course ID: 013372", "name": "Operating Systems"}, {"notes": ["Prereq: MATH 213; Software Engineering students only.", "Antireq: ECE 380, ME 360, MTE 360, SYDE 352"], "description": "Introduction to control systems. Advantages of closed-loop feedback systems. The role of the system mathematical model. Block diagrams and signal flow graphs. The basic control system design problem, stability in control systems. Frequency response analysis techniques. Root-locus analysis. Elementary lead-lag compensation. [Offered: W]", "intro": "SE 380 LAB,LEC,TUT 0.50", "id": "Course ID: 013373", "name": "Introduction to Feedback Control"}, {"notes": ["Prereq: CS 246, (SE 240 or CS 240); Software Engineering students only.", "Antireq: CS 349"], "description": "The purpose of this course is to introduce students to the design, implementation, and evaluation of contemporary human-computer interfaces. Topics include user-centered design, psychological considerations, and usability. Emphasis is on practical systems, such as PC-based window/mouse/keyboard systems. Labs alternate weeks. [Offered W]", "intro": "SE 382 LAB,LEC,TUT 0.50", "id": "Course ID: 010131", "name": "Human-computer Interaction"}, {"notes": ["Prereq: CS 240, (CS 246 or 247); Software Engineering students only."], "description": "Students undertake a substantial customer-driven group project as part of the SE 390/490/491 design-project sequence covering all major phases of the software-engineering lifecycle. Lectures describe expectations and project-planning fundamentals. Students form groups, decide on a project concept, complete a project-approval process, develop high-level requirements for the project, perform a risk assessment, develop a test plan, and complete a first-iteration prototype. Social, legal, and economic factors are considered. [Offered: F]", "intro": "SE 390 LEC,PRJ 0.50", "id": "Course ID: 012940", "name": "Design Project Planning"}, {"notes": ["Prereq: Software Engineering students only"], "description": "General Seminar [Offered: S]", "intro": "SE 401 SEM 0.00", "id": "Course ID: 011337", "name": "Seminar"}, {"notes": ["Prereq: Software Engineering students only"], "description": "General Seminar. [Offered: W]", "intro": "SE 402 SEM 0.00", "id": "Course ID: 011338", "name": "Seminar"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F]", "Prereq: CS 246 or 247; Software Engineering students only.", "Antireq: CS 445, ECE 451."], "description": "Introduces students to the requirements definition phase of software development: Models, notations, and processes for software requirements identification, representation, analysis, and validation. Cost estimation from early documents and specifications. ", "intro": "SE 463 LAB,LEC,TUT 0.50", "id": "Course ID: 010034", "name": "Software Requirements Specification and Analysis"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: S]", "Prereq: SE 463; Software Engineering students only.", "Antireq: CS 446, ECE 452"], "description": "Introduces students to the design, implementation, and evolution phases of software development. Software design processes, methods, and notation. Implementation of designs. Evolution of designs and implementations. Management of design activities. ", "intro": "SE 464 LAB,LEC,TUT 0.50", "id": "Course ID: 010035", "name": "Software Design and Architectures"}, {"notes": ["[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]", "Prereq: SE 464; Software Engineering students only.", "Antireq: CS 447, ECE 453"], "description": "Introduces students to systematic testing of software systems. Software verification, reviews, metrics, quality assurance, and prediction of software reliability and availability. Related management issues. ", "intro": "SE 465 LAB,LEC,TUT 0.50", "id": "Course ID: 010036", "name": "Software Testing and Quality Assurance"}, {"notes": ["Prereq: SE 390; Software Engineering students only"], "description": "Continuing from SE 390, students undertake a substantial customer-driven group project. Project groups establish and maintain project control processes, delivering a series of iterations on their initial SE 390 prototype. Adaptive methodologies are encouraged and supported. [Offered: S]", "intro": "SE 490 LEC,PRJ 0.50", "id": "Course ID: 012941", "name": "Design Project 1"}, {"notes": ["Prereq: SE 490; Software Engineering students only"], "description": "Final implementation, testing, and communication of the design project started in SE 390. Technical presentations by groups. Analysis of social, legal, and economic impacts. Final release of the project. Project retrospective. [Offered: W]", "intro": "SE 491 LEC,PRJ 0.50", "id": "Course ID: 012942", "name": "Design Project 2"}, {"notes": ["Prereq: Level at least 3B Software Engineering"], "description": "See the Course Offerings List for topics available. [Offered: As available]", "intro": "SE 498 LEC 0.50", "id": "Course ID: 012292", "name": "Advanced Topics in Software Engineering"}, {"notes": ["Department Consent Required", "Prereq: Level at least 4A Software Engineering"], "description": "A software engineering project requiring the student to demonstrate initiative an assume responsibility. The student normally proposes his or her own project, which must involve substantial engineering science or engineering design. The student must find a faculty supervisor. A project report is required at the end of the term. Program consent required. [Offered: F, W, S]", "intro": "SE 499 PRJ 0.50", "id": "Course ID: 012293", "name": "Project"}]